function initSwiperSlider(e){const n=$(e||".slider-solution");n.each((function(){const e=$(this),t=getComputedStyle(document.documentElement).getPropertyValue("--theme-items-gap");let i={grabCursor:!0,navigation:{nextEl:e.parent().find(".swiper-button-next")[0],prevEl:e.parent().find(".swiper-button-prev")[0]},pagination:{el:e.parent().find(".swiper-pagination")[0],type:"bullets",clickable:!0}};i.spaceBetween=parseInt(t)||-1,n.hasClass("slider-solution--no-gap")&&(n.find(".bordered").length?i.spaceBetween=-1:i.spaceBetween=0),e.data("pluginOptions")&&(i=deepMerge({},i,e.data("pluginOptions"))),BX.onCustomEvent("onSetSliderOptions",[i]);const o=new Swiper(this,i);o.on("slideChange",(function(e){const n={slider:e};BX.onCustomEvent("onSlideChanges",[n])})),!1===i.init&&(o.on("init",(function(e){const n={slider:e,options:i};BX.onCustomEvent("onInitSlider",[n]),1===i.countSlides&&BX.onCustomEvent("onSlideChanges",[{slider:e}])})),o.init()),e.data("swiper",o)}))}function deepMerge(){const e=[].slice.call(arguments);let n=e[0];const t=e.slice(1);return t.forEach((function(e){for(let t in e)if("object"==typeof e[t])for(let i in e[t])"object"!=typeof n[t]&&(n[t]={}),n[t][i]=e[t][i];else n[t]=e[t]})),n}readyDOM((function(){initSwiperSlider()}));